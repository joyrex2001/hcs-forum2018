---
kind: Template
apiVersion: v1
metadata:
  name: game-template
  annotations:
    openshift.io/display-name: Game Template
    description: The HCS Forum 2018 Game
message: |-
  The following service(s) have been created in your project:

    * ${NAME}
    * ${NAME}-redis

  Good luck!
labels:
  template: game-template
objects:
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Exposes and load balances the application pods
      prometheus.io/scrape: "true"
    labels:
      app: "${NAME}"
  spec:
    ports:
    - name: http
      port: 8080
      targetPort: 8080
    selector:
      name: "${NAME}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}-redis"
    annotations:
      description: Exposes and load balances the redis pods
      prometheus.io/scrape: "true"
    labels:
      app: "${NAME}"
  spec:
    ports:
    - name: redis
      port: 6379
      targetPort: 6379
    selector:
      name: "${NAME}-redis"
- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  spec:
    to:
      kind: Service
      name: "${NAME}"
    tls:
      termination: edge
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Keeps track of changes in the application image
    labels:
      app: "${NAME}"
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to build the application
    labels:
      app: "${NAME}"
  spec:
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
      sourceSecret:
        name: gitlab
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs-8-rhel7:latest
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to deploy the application server
    labels:
      app: "${NAME}"
  spec:
    strategy:
      type: Rolling
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: false
        containerNames:
        - ${NAME}
        from:
          kind: ImageStreamTag
          name: ${NAME}:latest
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        containers:
        - name: ${NAME}
          image: " "
          env:
          - name: "KAFKA_SERVERS"
            value: "${KAFKA_SERVERS}"
          - name: "REDIS_HOST"
            value: "${NAME}-redis"
          ports:
          - containerPort: 8080
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            httpGet:
              path: "/healthz"
              port: 8080
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            httpGet:
              path: "/healthz"
              port: 8080
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}-redis"
    annotations:
      description: Defines how to deploy the redis server
    labels:
      app: "${NAME}"
  spec:
    replicas: 1
    selector:
      name: "${NAME}-redis"
    template:
      metadata:
        name: "${NAME}-redis"
        labels:
          name: "${NAME}-redis"
      spec:
        containers:
        - name: ${NAME}
          image: docker.io/redis
          ports:
          - containerPort: 6379
          readinessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 3
            tcpSocket:
              port: 6379
          livenessProbe:
            timeoutSeconds: 3
            initialDelaySeconds: 30
            tcpSocket:
              port: 6379
          resources:
            limits:
              memory: "${MEMORY_LIMIT_REDIS}"
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: game
- name: MEMORY_LIMIT
  displayName: Memory Limit
  description: Maximum amount of memory the frontend container can use.
  required: true
  value: 256Mi
- name: MEMORY_LIMIT_REDIS
  displayName: Memory Limit
  description: Maximum amount of memory the redis container can use.
  required: true
  value: 128Mi
- name: KAFKA_SERVERS
  displayName: Kafka servers
  description: Comma seperated list of kafka hostnames to bootstrap the kafka connection.
  required: false
  value: "kafka-kafka:9092"
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  description: The URL of the repository with your application source code.
  required: true
  value: git@gitlab.com:hcs-openshift/hcs-forum2018.git
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  value: master
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root
    of your repository.
  value: game
